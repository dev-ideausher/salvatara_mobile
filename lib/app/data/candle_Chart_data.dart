///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class CandleGraphData {
/*
{
  "time": 1672749000000,
  "open": 16722.27,
  "high": 16722.27,
  "low": 16720.33,
  "close": 16721.81
}
*/

  int? time;
  double? open;
  double? high;
  double? low;
  double? close;

  CandleGraphData({
    this.time,
    this.open,
    this.high,
    this.low,
    this.close,
  });
  CandleGraphData.fromJson(Map<String, dynamic> json) {
    time = json['time']?.toInt();
    open = json['open']?.toDouble();
    high = json['high']?.toDouble();
    low = json['low']?.toDouble();
    close = json['close']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['time'] = time;
    data['open'] = open;
    data['high'] = high;
    data['low'] = low;
    data['close'] = close;
    return data;
  }
}

class CandleGraph {
/*
{
  "status": true,
  "message": "Crypto Data",
  "data": [
    {
      "time": 1672749000000,
      "open": 16722.27,
      "high": 16722.27,
      "low": 16720.33,
      "close": 16721.81
    }
  ]
}
*/

  bool? status;
  String? message;
  List<CandleGraphData?>? data;

  CandleGraph({
    this.status,
    this.message,
    this.data,
  });
  CandleGraph.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    message = json['message']?.toString();
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <CandleGraphData>[];
      v.forEach((v) {
        arr0.add(CandleGraphData.fromJson(v));
      });
      this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    return data;
  }
}
