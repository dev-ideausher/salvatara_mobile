///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class nftDetailsDataTransaction {
/*
{
  "_id": "642ab84a5b1e596fb73766b4",
  "user": "63c9488150546b2606610c11",
  "typeOfPayment": "matic",
  "txnHash": "0xe3487415f5b2bbb9b65980fbed66c2893e4976e82aae979af441625404911dc3",
  "price": 0.01,
  "nft": "642ab84a5b1e596fb73766b0",
  "contractAddress": "0x81eaeC135cF1D9b3eE82bCB63Ac65766843076C0",
  "createdAt": "2023-04-03T11:28:10.937Z",
  "updatedAt": "2023-04-03T11:28:10.937Z"
}
*/

  String? Id;
  String? user;
  String? typeOfPayment;
  String? txnHash;
  double? price;
  String? nft;
  String? contractAddress;
  String? createdAt;
  String? updatedAt;

  nftDetailsDataTransaction({
    this.Id,
    this.user,
    this.typeOfPayment,
    this.txnHash,
    this.price,
    this.nft,
    this.contractAddress,
    this.createdAt,
    this.updatedAt,
  });
  nftDetailsDataTransaction.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    user = json['user']?.toString();
    typeOfPayment = json['typeOfPayment']?.toString();
    txnHash = json['txnHash']?.toString();
    price = json['price']?.toDouble();
    nft = json['nft']?.toString();
    contractAddress = json['contractAddress']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['user'] = user;
    data['typeOfPayment'] = typeOfPayment;
    data['txnHash'] = txnHash;
    data['price'] = price;
    data['nft'] = nft;
    data['contractAddress'] = contractAddress;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class nftDetailsDataOwnerKyc {
/*
{
  "documentType": "",
  "front": "",
  "back": ""
}
*/

  String? documentType;
  String? front;
  String? back;

  nftDetailsDataOwnerKyc({
    this.documentType,
    this.front,
    this.back,
  });
  nftDetailsDataOwnerKyc.fromJson(Map<String, dynamic> json) {
    documentType = json['documentType']?.toString();
    front = json['front']?.toString();
    back = json['back']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['documentType'] = documentType;
    data['front'] = front;
    data['back'] = back;
    return data;
  }
}

class nftDetailsDataOwner {
/*
{
  "kyc": {
    "documentType": "",
    "front": "",
    "back": ""
  },
  "_id": "642ad51c4fe31b3c6b8a772d",
  "name": "",
  "email": "lisa.carter@internetmarketinggeeks.com",
  "userType": "admin",
  "walletId": "",
  "cor": "Canada",
  "firebaseUid": "vHMIWsa6xqVBsekYs0ybDUwxueI3",
  "firebaseSignInProvider": "password",
  "active": true,
  "isDeleted": false,
  "dob": null,
  "otp": 0,
  "selfie": "",
  "followingCount": 0,
  "followersCount": 0,
  "createdAt": "2023-04-03T13:31:08.799Z",
  "updatedAt": "2023-04-03T13:32:39.509Z",
  "firstname": "Lisa",
  "lastname": "Carter"
}
*/

  nftDetailsDataOwnerKyc? kyc;
  String? Id;
  String? name;
  String? email;
  String? userType;
  String? walletId;
  String? cor;
  String? firebaseUid;
  String? firebaseSignInProvider;
  bool? active;
  bool? isDeleted;
  String? dob;
  int? otp;
  String? selfie;
  int? followingCount;
  int? followersCount;
  String? createdAt;
  String? updatedAt;
  String? firstname;
  String? lastname;

  nftDetailsDataOwner({
    this.kyc,
    this.Id,
    this.name,
    this.email,
    this.userType,
    this.walletId,
    this.cor,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.active,
    this.isDeleted,
    this.dob,
    this.otp,
    this.selfie,
    this.followingCount,
    this.followersCount,
    this.createdAt,
    this.updatedAt,
    this.firstname,
    this.lastname,
  });
  nftDetailsDataOwner.fromJson(Map<String, dynamic> json) {
    kyc = (json['kyc'] != null) ? nftDetailsDataOwnerKyc.fromJson(json['kyc']) : null;
    Id = json['_id']?.toString();
    name = json['name']?.toString();
    email = json['email']?.toString();
    userType = json['userType']?.toString();
    walletId = json['walletId']?.toString();
    cor = json['cor']?.toString();
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    active = json['active'];
    isDeleted = json['isDeleted'];
    dob = json['dob']?.toString();
    otp = json['otp']?.toInt();
    selfie = json['selfie']?.toString();
    followingCount = json['followingCount']?.toInt();
    followersCount = json['followersCount']?.toInt();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    firstname = json['firstname']?.toString();
    lastname = json['lastname']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (kyc != null) {
      data['kyc'] = kyc!.toJson();
    }
    data['_id'] = Id;
    data['name'] = name;
    data['email'] = email;
    data['userType'] = userType;
    data['walletId'] = walletId;
    data['cor'] = cor;
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['active'] = active;
    data['isDeleted'] = isDeleted;
    data['dob'] = dob;
    data['otp'] = otp;
    data['selfie'] = selfie;
    data['followingCount'] = followingCount;
    data['followersCount'] = followersCount;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['firstname'] = firstname;
    data['lastname'] = lastname;
    return data;
  }
}

class nftDetailsDataCollectionIdUserKyc {
/*
{
  "documentType": "document",
  "front": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_3065F9DB-51C1-4BF7-A478-37B190D6E405-22249-000007656E292105.png",
  "back": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_32C5FA95-56E3-445F-9D89-79F50F4DB911-22249-000007656B39B2DF.png"
}
*/

  String? documentType;
  String? front;
  String? back;

  nftDetailsDataCollectionIdUserKyc({
    this.documentType,
    this.front,
    this.back,
  });
  nftDetailsDataCollectionIdUserKyc.fromJson(Map<String, dynamic> json) {
    documentType = json['documentType']?.toString();
    front = json['front']?.toString();
    back = json['back']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['documentType'] = documentType;
    data['front'] = front;
    data['back'] = back;
    return data;
  }
}

class nftDetailsDataCollectionIdUser {
/*
{
  "kyc": {
    "documentType": "document",
    "front": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_3065F9DB-51C1-4BF7-A478-37B190D6E405-22249-000007656E292105.png",
    "back": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_32C5FA95-56E3-445F-9D89-79F50F4DB911-22249-000007656B39B2DF.png"
  },
  "name": "",
  "walletId": "",
  "_id": "63c9488150546b2606610c11",
  "email": "yamankumar112@gmail.com",
  "userType": "admin",
  "cor": "India ",
  "firebaseUid": "ySSPaOkeibWRl6VbpB9KaWVP7fL2",
  "firebaseSignInProvider": "password",
  "active": true,
  "isDeleted": false,
  "dob": "2012-02-16T00:00:00.000Z",
  "otp": 0,
  "selfie": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryCAP_98AACC1D-9823-435F-868F-0526AFB53D81.jpg",
  "followingCount": 0,
  "followersCount": 0,
  "createdAt": "2023-01-19T13:41:21.855Z",
  "updatedAt": "2023-03-29T22:05:59.587Z",
  "firstname": "Yaman",
  "lastname": "Kumar "
}
*/

  nftDetailsDataCollectionIdUserKyc? kyc;
  String? name;
  String? walletId;
  String? Id;
  String? email;
  String? userType;
  String? cor;
  String? firebaseUid;
  String? firebaseSignInProvider;
  bool? active;
  bool? isDeleted;
  String? dob;
  int? otp;
  String? selfie;
  int? followingCount;
  int? followersCount;
  String? createdAt;
  String? updatedAt;
  String? firstname;
  String? lastname;

  nftDetailsDataCollectionIdUser({
    this.kyc,
    this.name,
    this.walletId,
    this.Id,
    this.email,
    this.userType,
    this.cor,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.active,
    this.isDeleted,
    this.dob,
    this.otp,
    this.selfie,
    this.followingCount,
    this.followersCount,
    this.createdAt,
    this.updatedAt,
    this.firstname,
    this.lastname,
  });
  nftDetailsDataCollectionIdUser.fromJson(Map<String, dynamic> json) {
    kyc = (json['kyc'] != null) ? nftDetailsDataCollectionIdUserKyc.fromJson(json['kyc']) : null;
    name = json['name']?.toString();
    walletId = json['walletId']?.toString();
    Id = json['_id']?.toString();
    email = json['email']?.toString();
    userType = json['userType']?.toString();
    cor = json['cor']?.toString();
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    active = json['active'];
    isDeleted = json['isDeleted'];
    dob = json['dob']?.toString();
    otp = json['otp']?.toInt();
    selfie = json['selfie']?.toString();
    followingCount = json['followingCount']?.toInt();
    followersCount = json['followersCount']?.toInt();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    firstname = json['firstname']?.toString();
    lastname = json['lastname']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (kyc != null) {
      data['kyc'] = kyc!.toJson();
    }
    data['name'] = name;
    data['walletId'] = walletId;
    data['_id'] = Id;
    data['email'] = email;
    data['userType'] = userType;
    data['cor'] = cor;
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['active'] = active;
    data['isDeleted'] = isDeleted;
    data['dob'] = dob;
    data['otp'] = otp;
    data['selfie'] = selfie;
    data['followingCount'] = followingCount;
    data['followersCount'] = followersCount;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['firstname'] = firstname;
    data['lastname'] = lastname;
    return data;
  }
}

class nftDetailsDataCollectionId {
/*
{
  "_id": "642ab7435b1e596fb7376664",
  "title": "Minted queens ",
  "category": "png",
  "description": "Minted queens ",
  "externalLink": "www",
  "explicit_sensitive": true,
  "royalty": 1,
  "profile": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_06EA51C5-7EEB-48B7-9F08-12C5308E70A0-2281-00000106234C878F.jpg",
  "cover": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_612BDE17-2647-438B-8047-28ED693EF3A2-2281-000001062645183B.jpg",
  "user": {
    "kyc": {
      "documentType": "document",
      "front": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_3065F9DB-51C1-4BF7-A478-37B190D6E405-22249-000007656E292105.png",
      "back": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_32C5FA95-56E3-445F-9D89-79F50F4DB911-22249-000007656B39B2DF.png"
    },
    "name": "",
    "walletId": "",
    "_id": "63c9488150546b2606610c11",
    "email": "yamankumar112@gmail.com",
    "userType": "admin",
    "cor": "India ",
    "firebaseUid": "ySSPaOkeibWRl6VbpB9KaWVP7fL2",
    "firebaseSignInProvider": "password",
    "active": true,
    "isDeleted": false,
    "dob": "2012-02-16T00:00:00.000Z",
    "otp": 0,
    "selfie": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryCAP_98AACC1D-9823-435F-868F-0526AFB53D81.jpg",
    "followingCount": 0,
    "followersCount": 0,
    "createdAt": "2023-01-19T13:41:21.855Z",
    "updatedAt": "2023-03-29T22:05:59.587Z",
    "firstname": "Yaman",
    "lastname": "Kumar "
  },
  "createdAt": "2023-04-03T11:23:47.150Z",
  "updatedAt": "2023-04-03T11:23:47.150Z",
  "typeOfPayment": "salvacoin"
}
*/

  String? Id;
  String? title;
  String? category;
  String? description;
  String? externalLink;
  bool? explicitSensitive;
  int? royalty;
  String? profile;
  String? cover;
  nftDetailsDataCollectionIdUser? user;
  String? createdAt;
  String? updatedAt;
  String? typeOfPayment;

  nftDetailsDataCollectionId({
    this.Id,
    this.title,
    this.category,
    this.description,
    this.externalLink,
    this.explicitSensitive,
    this.royalty,
    this.profile,
    this.cover,
    this.user,
    this.createdAt,
    this.updatedAt,
    this.typeOfPayment,
  });
  nftDetailsDataCollectionId.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    title = json['title']?.toString();
    category = json['category']?.toString();
    description = json['description']?.toString();
    externalLink = json['externalLink']?.toString();
    explicitSensitive = json['explicit_sensitive'];
    royalty = json['royalty']?.toInt();
    profile = json['profile']?.toString();
    cover = json['cover']?.toString();
    user = (json['user'] != null) ? nftDetailsDataCollectionIdUser.fromJson(json['user']) : null;
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    typeOfPayment = json['typeOfPayment']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['title'] = title;
    data['category'] = category;
    data['description'] = description;
    data['externalLink'] = externalLink;
    data['explicit_sensitive'] = explicitSensitive;
    data['royalty'] = royalty;
    data['profile'] = profile;
    data['cover'] = cover;
    if (user != null) {
      data['user'] = user!.toJson();
    }
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['typeOfPayment'] = typeOfPayment;
    return data;
  }
}

class nftDetailsData {
/*
{
  "_id": "642ab84a5b1e596fb73766b0",
  "title": "Rainbow head",
  "category": "png",
  "description": "desc",
  "price": 0.01,
  "externalLink": "www",
  "explicit_sensitive": true,
  "stats": true,
  "royalty": 10,
  "imageURL": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_74993A5C-0FD5-4B41-8C9A-B5CC72013371-2281-00000107918D7136.jpg",
  "fileType": "image",
  "market": "setPrice",
  "status": "Sold",
  "collectionId": {
    "_id": "642ab7435b1e596fb7376664",
    "title": "Minted queens ",
    "category": "png",
    "description": "Minted queens ",
    "externalLink": "www",
    "explicit_sensitive": true,
    "royalty": 1,
    "profile": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_06EA51C5-7EEB-48B7-9F08-12C5308E70A0-2281-00000106234C878F.jpg",
    "cover": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_612BDE17-2647-438B-8047-28ED693EF3A2-2281-000001062645183B.jpg",
    "user": {
      "kyc": {
        "documentType": "document",
        "front": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_3065F9DB-51C1-4BF7-A478-37B190D6E405-22249-000007656E292105.png",
        "back": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_32C5FA95-56E3-445F-9D89-79F50F4DB911-22249-000007656B39B2DF.png"
      },
      "name": "",
      "walletId": "",
      "_id": "63c9488150546b2606610c11",
      "email": "yamankumar112@gmail.com",
      "userType": "admin",
      "cor": "India ",
      "firebaseUid": "ySSPaOkeibWRl6VbpB9KaWVP7fL2",
      "firebaseSignInProvider": "password",
      "active": true,
      "isDeleted": false,
      "dob": "2012-02-16T00:00:00.000Z",
      "otp": 0,
      "selfie": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryCAP_98AACC1D-9823-435F-868F-0526AFB53D81.jpg",
      "followingCount": 0,
      "followersCount": 0,
      "createdAt": "2023-01-19T13:41:21.855Z",
      "updatedAt": "2023-03-29T22:05:59.587Z",
      "firstname": "Yaman",
      "lastname": "Kumar "
    },
    "createdAt": "2023-04-03T11:23:47.150Z",
    "updatedAt": "2023-04-03T11:23:47.150Z",
    "typeOfPayment": "salvacoin"
  },
  "views": 0,
  "favourites": 0,
  "owner": {
    "kyc": {
      "documentType": "",
      "front": "",
      "back": ""
    },
    "_id": "642ad51c4fe31b3c6b8a772d",
    "name": "",
    "email": "lisa.carter@internetmarketinggeeks.com",
    "userType": "admin",
    "walletId": "",
    "cor": "Canada",
    "firebaseUid": "vHMIWsa6xqVBsekYs0ybDUwxueI3",
    "firebaseSignInProvider": "password",
    "active": true,
    "isDeleted": false,
    "dob": null,
    "otp": 0,
    "selfie": "",
    "followingCount": 0,
    "followersCount": 0,
    "createdAt": "2023-04-03T13:31:08.799Z",
    "updatedAt": "2023-04-03T13:32:39.509Z",
    "firstname": "Lisa",
    "lastname": "Carter"
  },
  "network": "",
  "tokenId": "119",
  "contractAddress": "0x81eaeC135cF1D9b3eE82bCB63Ac65766843076C0",
  "platFormFee": 0,
  "userfavourite": false,
  "transaction": [
    {
      "_id": "642ab84a5b1e596fb73766b4",
      "user": "63c9488150546b2606610c11",
      "typeOfPayment": "matic",
      "txnHash": "0xe3487415f5b2bbb9b65980fbed66c2893e4976e82aae979af441625404911dc3",
      "price": 0.01,
      "nft": "642ab84a5b1e596fb73766b0",
      "contractAddress": "0x81eaeC135cF1D9b3eE82bCB63Ac65766843076C0",
      "createdAt": "2023-04-03T11:28:10.937Z",
      "updatedAt": "2023-04-03T11:28:10.937Z"
    }
  ],
  "typeOfPayment": "salvacoin"
}
*/

  String? Id;
  String? title;
  String? category;
  String? description;
  double? price;
  String? externalLink;
  bool? explicitSensitive;
  bool? stats;
  int? royalty;
  String? imageURL;
  String? fileType;
  String? market;
  String? status;
  nftDetailsDataCollectionId? collectionId;
  int? views;
  int? favourites;
  nftDetailsDataOwner? owner;
  String? network;
  String? tokenId;
  String? contractAddress;
  int? platFormFee;
  bool? userfavourite;
  List<nftDetailsDataTransaction?>? transaction;
  String? typeOfPayment;

  nftDetailsData({
    this.Id,
    this.title,
    this.category,
    this.description,
    this.price,
    this.externalLink,
    this.explicitSensitive,
    this.stats,
    this.royalty,
    this.imageURL,
    this.fileType,
    this.market,
    this.status,
    this.collectionId,
    this.views,
    this.favourites,
    this.owner,
    this.network,
    this.tokenId,
    this.contractAddress,
    this.platFormFee,
    this.userfavourite,
    this.transaction,
    this.typeOfPayment,
  });
  nftDetailsData.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    title = json['title']?.toString();
    category = json['category']?.toString();
    description = json['description']?.toString();
    price = json['price']?.toDouble();
    externalLink = json['externalLink']?.toString();
    explicitSensitive = json['explicit_sensitive'];
    stats = json['stats'];
    royalty = json['royalty']?.toInt();
    imageURL = json['imageURL']?.toString();
    fileType = json['fileType']?.toString();
    market = json['market']?.toString();
    status = json['status']?.toString();
    collectionId = (json['collectionId'] != null) ? nftDetailsDataCollectionId.fromJson(json['collectionId']) : null;
    views = json['views']?.toInt();
    favourites = json['favourites']?.toInt();
    owner = (json['owner'] != null) ? nftDetailsDataOwner.fromJson(json['owner']) : null;
    network = json['network']?.toString();
    tokenId = json['tokenId']?.toString();
    contractAddress = json['contractAddress']?.toString();
    platFormFee = json['platFormFee']?.toInt();
    userfavourite = json['userfavourite'];
    if (json['transaction'] != null) {
      final v = json['transaction'];
      final arr0 = <nftDetailsDataTransaction>[];
      v.forEach((v) {
        arr0.add(nftDetailsDataTransaction.fromJson(v));
      });
      transaction = arr0;
    }
    typeOfPayment = json['typeOfPayment']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['title'] = title;
    data['category'] = category;
    data['description'] = description;
    data['price'] = price;
    data['externalLink'] = externalLink;
    data['explicit_sensitive'] = explicitSensitive;
    data['stats'] = stats;
    data['royalty'] = royalty;
    data['imageURL'] = imageURL;
    data['fileType'] = fileType;
    data['market'] = market;
    data['status'] = status;
    if (collectionId != null) {
      data['collectionId'] = collectionId!.toJson();
    }
    data['views'] = views;
    data['favourites'] = favourites;
    if (owner != null) {
      data['owner'] = owner!.toJson();
    }
    data['network'] = network;
    data['tokenId'] = tokenId;
    data['contractAddress'] = contractAddress;
    data['platFormFee'] = platFormFee;
    data['userfavourite'] = userfavourite;
    if (transaction != null) {
      final v = transaction;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['transaction'] = arr0;
    }
    data['typeOfPayment'] = typeOfPayment;
    return data;
  }
}

class nftDetails {
/*
{
  "status": true,
  "message": "nft found",
  "data": {
    "_id": "642ab84a5b1e596fb73766b0",
    "title": "Rainbow head",
    "category": "png",
    "description": "desc",
    "price": 0.01,
    "externalLink": "www",
    "explicit_sensitive": true,
    "stats": true,
    "royalty": 10,
    "imageURL": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_74993A5C-0FD5-4B41-8C9A-B5CC72013371-2281-00000107918D7136.jpg",
    "fileType": "image",
    "market": "setPrice",
    "status": "Sold",
    "collectionId": {
      "_id": "642ab7435b1e596fb7376664",
      "title": "Minted queens ",
      "category": "png",
      "description": "Minted queens ",
      "externalLink": "www",
      "explicit_sensitive": true,
      "royalty": 1,
      "profile": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_06EA51C5-7EEB-48B7-9F08-12C5308E70A0-2281-00000106234C878F.jpg",
      "cover": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_612BDE17-2647-438B-8047-28ED693EF3A2-2281-000001062645183B.jpg",
      "user": {
        "kyc": {
          "documentType": "document",
          "front": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_3065F9DB-51C1-4BF7-A478-37B190D6E405-22249-000007656E292105.png",
          "back": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryimage_picker_32C5FA95-56E3-445F-9D89-79F50F4DB911-22249-000007656B39B2DF.png"
        },
        "name": "",
        "walletId": "",
        "_id": "63c9488150546b2606610c11",
        "email": "yamankumar112@gmail.com",
        "userType": "admin",
        "cor": "India ",
        "firebaseUid": "ySSPaOkeibWRl6VbpB9KaWVP7fL2",
        "firebaseSignInProvider": "password",
        "active": true,
        "isDeleted": false,
        "dob": "2012-02-16T00:00:00.000Z",
        "otp": 0,
        "selfie": "https://salvatara.s3.us-east-2.amazonaws.com/salvatara-galleryCAP_98AACC1D-9823-435F-868F-0526AFB53D81.jpg",
        "followingCount": 0,
        "followersCount": 0,
        "createdAt": "2023-01-19T13:41:21.855Z",
        "updatedAt": "2023-03-29T22:05:59.587Z",
        "firstname": "Yaman",
        "lastname": "Kumar "
      },
      "createdAt": "2023-04-03T11:23:47.150Z",
      "updatedAt": "2023-04-03T11:23:47.150Z",
      "typeOfPayment": "salvacoin"
    },
    "views": 0,
    "favourites": 0,
    "owner": {
      "kyc": {
        "documentType": "",
        "front": "",
        "back": ""
      },
      "_id": "642ad51c4fe31b3c6b8a772d",
      "name": "",
      "email": "lisa.carter@internetmarketinggeeks.com",
      "userType": "admin",
      "walletId": "",
      "cor": "Canada",
      "firebaseUid": "vHMIWsa6xqVBsekYs0ybDUwxueI3",
      "firebaseSignInProvider": "password",
      "active": true,
      "isDeleted": false,
      "dob": null,
      "otp": 0,
      "selfie": "",
      "followingCount": 0,
      "followersCount": 0,
      "createdAt": "2023-04-03T13:31:08.799Z",
      "updatedAt": "2023-04-03T13:32:39.509Z",
      "firstname": "Lisa",
      "lastname": "Carter"
    },
    "network": "",
    "tokenId": "119",
    "contractAddress": "0x81eaeC135cF1D9b3eE82bCB63Ac65766843076C0",
    "platFormFee": 0,
    "userfavourite": false,
    "transaction": [
      {
        "_id": "642ab84a5b1e596fb73766b4",
        "user": "63c9488150546b2606610c11",
        "typeOfPayment": "matic",
        "txnHash": "0xe3487415f5b2bbb9b65980fbed66c2893e4976e82aae979af441625404911dc3",
        "price": 0.01,
        "nft": "642ab84a5b1e596fb73766b0",
        "contractAddress": "0x81eaeC135cF1D9b3eE82bCB63Ac65766843076C0",
        "createdAt": "2023-04-03T11:28:10.937Z",
        "updatedAt": "2023-04-03T11:28:10.937Z"
      }
    ],
    "typeOfPayment": "salvacoin"
  }
}
*/

  bool? status;
  String? message;
  nftDetailsData? data;

  nftDetails({
    this.status,
    this.message,
    this.data,
  });
  nftDetails.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    message = json['message']?.toString();
    data = (json['data'] != null) ? nftDetailsData.fromJson(json['data']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}
